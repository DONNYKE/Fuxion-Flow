{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import{supabase}from'./supabaseClient';// Importa supabase\nimport Home from'./pages/Home';import Inventory from'./pages/Inventory';import Customers from'./pages/Customers';import Partners from'./pages/Partners';import History from'./pages/History';import Reports from'./pages/Reports';import Auth from'./pages/Auth';import Navbar from'./components/Navbar';import LoadingSpinner from'./components/LoadingSpinner';// Asegúrate de que este componente exista\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[session,setSession]=useState(null);const[loadingAuth,setLoadingAuth]=useState(true);useEffect(()=>{// Forzar el cierre de sesión al iniciar la aplicación\nconst forceLogoutOnStart=async()=>{await supabase.auth.signOut();// Después de cerrar sesión, la lógica de onAuthStateChange se encargará de actualizar el estado\n};forceLogoutOnStart();// Escucha los cambios de estado de autenticación de Supabase\nconst{data:authListener}=supabase.auth.onAuthStateChange((_event,session)=>{setSession(session);setLoadingAuth(false);});// Obtener la sesión inicial (después de intentar cerrar sesión)\nsupabase.auth.getSession().then(_ref=>{let{data:{session}}=_ref;setSession(session);setLoadingAuth(false);});return()=>{authListener.subscription.unsubscribe();};},[]);// El array vacío asegura que este useEffect se ejecute solo una vez al montar\nif(loadingAuth){return/*#__PURE__*/_jsx(LoadingSpinner,{});// Muestra un spinner mientras se verifica la sesión\n}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col min-h-screen\",children:[/*#__PURE__*/_jsx(\"main\",{className:\"flex-grow pb-16\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/auth\",element:/*#__PURE__*/_jsx(Auth,{})}),session?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/inventory\",element:/*#__PURE__*/_jsx(Inventory,{})}),/*#__PURE__*/_jsx(Route,{path:\"/customers\",element:/*#__PURE__*/_jsx(Customers,{})}),/*#__PURE__*/_jsx(Route,{path:\"/partners\",element:/*#__PURE__*/_jsx(Partners,{})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:/*#__PURE__*/_jsx(History,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reports\",element:/*#__PURE__*/_jsx(Reports,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]}):/*#__PURE__*/// Redirigir a la página de autenticación si no está autenticado\n_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true})})]})}),session&&/*#__PURE__*/_jsx(Navbar,{}),\" \"]})});}","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","supabase","Home","Inventory","Customers","Partners","History","Reports","Auth","Navbar","LoadingSpinner","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","session","setSession","loadingAuth","setLoadingAuth","forceLogoutOnStart","auth","signOut","data","authListener","onAuthStateChange","_event","getSession","then","_ref","subscription","unsubscribe","children","className","path","element","to","replace"],"sources":["C:/Users/donny/Downloads/project (1)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient'; // Importa supabase\nimport Home from './pages/Home';\nimport Inventory from './pages/Inventory';\nimport Customers from './pages/Customers';\nimport Partners from './pages/Partners';\nimport History from './pages/History';\nimport Reports from './pages/Reports';\nimport Auth from './pages/Auth';\nimport Navbar from './components/Navbar';\nimport LoadingSpinner from './components/LoadingSpinner'; // Asegúrate de que este componente exista\n\nexport default function App() {\n  const [session, setSession] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(true);\n\n  useEffect(() => {\n    // Forzar el cierre de sesión al iniciar la aplicación\n    const forceLogoutOnStart = async () => {\n      await supabase.auth.signOut();\n      // Después de cerrar sesión, la lógica de onAuthStateChange se encargará de actualizar el estado\n    };\n    forceLogoutOnStart();\n\n    // Escucha los cambios de estado de autenticación de Supabase\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setLoadingAuth(false);\n    });\n\n    // Obtener la sesión inicial (después de intentar cerrar sesión)\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setLoadingAuth(false);\n    });\n\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []); // El array vacío asegura que este useEffect se ejecute solo una vez al montar\n\n  if (loadingAuth) {\n    return <LoadingSpinner />; // Muestra un spinner mientras se verifica la sesión\n  }\n\n  return (\n    <Router>\n      <div className=\"flex flex-col min-h-screen\">\n        <main className=\"flex-grow pb-16\">\n          <Routes>\n            {/* Ruta de autenticación */}\n            <Route path=\"/auth\" element={<Auth />} />\n\n            {/* Rutas protegidas */}\n            {session ? (\n              <>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/inventory\" element={<Inventory />} />\n                <Route path=\"/customers\" element={<Customers />} />\n                <Route path=\"/partners\" element={<Partners />} />\n                <Route path=\"/history\" element={<History />} />\n                <Route path=\"/reports\" element={<Reports />} />\n                {/* Redirigir cualquier otra ruta a Home si está autenticado */}\n                <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n              </>\n            ) : (\n              // Redirigir a la página de autenticación si no está autenticado\n              <Route path=\"*\" element={<Navigate to=\"/auth\" replace />} />\n            )}\n          </Routes>\n        </main>\n        {session && <Navbar />} {/* Solo muestra la Navbar si el usuario está autenticado */}\n      </div>\n    </Router>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}